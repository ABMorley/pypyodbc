# Python Database Programming Quick Start Tutorial.

Today, I would use a simple sales database programing case to guide the interested readers the entry-level Python database programming techniques. We will use Python to create a simple MS-Access sales database, using Python ODBC interface to insert and delete sales records, and lastly, query the data in the Access database. Below are the main steps we will be programming step-by-step through:
  # Introduce and install Python & an ODBC module pypyodbc;
  # Create an Access database and a sales table in this database;
  # Record sales transactions by inserting records in the table;
  # Use Python to query data in the database and compress the MS-Access database file.

Ready? Let's begin!

===1) Introduce and install Python & an ODBC module pypyodbc===
The Python install package can be downloaded in www.python.org . For this tutorial, we need to download Python version. Although it is a programming platform, like ordinary program, you just need to choose a local installation path to install Python, and then you can just press the "Next" all the way to complete the installation.

_- Some people may ask, why not choose the latest Python 3.X ? Today (January 20, 2013) my point of view: If you want to quickly start to develop real world system in Python, then right now you should choose Python 2.7. Python 3.X is, without doubt, the future direction. However, as the 3.X versions do not have good backward compatibility, many function libraries that can be used in Python 2.X module, as of today still can not be used in Python 3.X. The bread and milk of Python 3.x are in preparation, but it will take a little more time._


Next, we need to install the pypyodbc module. Pypyodbc is a one-script pure python moudle to call the operating system's ODBC funcitons. Way to install pypyodbc:
From http://code.google.com/p/pypyodbc/downloads/list download the pypyodbc installation file, currently the latest one is pypyodbc-0.9.1-SVN-r206.zip. 

http://s7.sinaimg.cn/mw690/6c64ac15gd41b14d7fa77&690?b=x.png

Download and extract the zip file to a temporary directory, double-click the setup.py file, and this will get pypyodbc installed for your installed Python instance.

http://s7.sinaimg.cn/mw690/6c64ac15gd4312f132752&690?b=x.png


In this tutorial, as we will enter the command directly in the Python interactive window, so please use the above method to install pypyodbc. In your future projects, we can just unzipped the zip file, place the core script pypyodbc.py under the same directory where we will write the project scripts, then you would be able to call it directly in your project script, and no need to do have the module installed in Python instance separately.

Okay, we have Python and PyPyODBC installed, and now we can begin writing some real code in Python!


===2) Create an Access database and a sales table in this database===

From here on, in order for uses to understand the effect of each step, we will write codes in the Python interactive window interface (Shell) step by step, and finally, we will concentrate these interactive codes to a script file, and become a program file.

Let's open the Python interface: find Python 2.7 directory from the Windows Start menu, click to run Python 2.7 (command line), there will be a white on black text input window pop up, containing the following words.
{{{
Python 2.7.3 (default, Apr 10 2012, 23:31:26) [MSC v.1500 32 bit (Intel)] on win32
Type "copyright", "credits" or "license ()" for more information.
>>>
}}}
That means you can now type codes after this >>> symbol, step-by-step manipulating Python to complete actions. We now go step by step: The first step: We command Python to identify the just installed pypyodbc module from it's module library, for us to use in the next steps.
{{{
>>> import pypyodbc
}}}

http://s11.sinaimg.cn/mw690/6c64ac15g7b9e84f60e0a&690?b=x.png

Step two: We want to create an Access database to store sales data. This is a featured function of PyPyODBC, so users can easily use it to create a blank Access database on Windows platforms. We name the Access database salesdb.mdb, and put it under the root directory of D drive.
{{{
>>> pypyodbc.win_create_mdb('D:\\salesdb.mdb')
}}}
At this time, you can see a blank Access database file salesdb.mdb is generated in the D drive.











