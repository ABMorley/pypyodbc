#Minimum steps to setup ODBC in Linux for pypyodbc

= Have your Linux box setup for ODBC & FreeTDS in 3 steps, and start using it in Python =

In Linux, to use ODBC driver connecting to MS SQLServer, we need to install and configure ODBC for Linux. To accomplish that, many tutorials listed complicated steps which might be hard to understand and follow. 

To easy the process, I will list the minimum steps you need to do in 3 steps:


The tutorial based on fresh installed Ubuntu 12.04 environment:

== 1. Install the ODBC module unixodbc for Linux, and the MSSQL ODBC Driver FreeTDS ==

In command-line terminal, enter command:
{{{
sudo apt-get install tdsodbc unixodbc
}}}

Explanation: tdsodbc is FreeTDS's key package, it contains the MSSQL odbc driver libtdsodbc.so; unixodbc is Linux's ODBC framework, the package contains critical binary files: libtdsodbc.so or libtdsodbc.so.1





== 2. Modify /etc/odbcinst.ini (if the file doesn't exist under /etc, create the file), make sure you have the below content in the file ==
{{{
[FreeTDS]
Driver = / usr/lib/i386-linux-gnu/libtdsodbc.so
}}}

The third step, modify / etc / freetds / freetds.conf
The file [Global] section, make sure the following two, if not to fill:
[Global]
TDS_Version = 8.0
client charset = UTF-8


At this point, FreeTDS with a good, we can use pure Python ODBC library pypyodbc to test:
import pypyodbc
pypyodbc.connect ('Driver = FreeTDS; Server = 192.168.1.2; port = 1433; uid = sa; pwd = pwd1; database = db_name')

Buttoned up yet?