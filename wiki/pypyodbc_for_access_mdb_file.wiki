#summary Create and Compact Access MDB files with python on win32 platform
#labels Phase-Implementation,Featured

= PyPyODBC functions for generating MDB file <g:plusone size="tall"></g:plusone> =

You can use pypyodbc to easily create an empty Access MDB file on win32 platform, and also compact existing Access MDB files.


= How to =

Import pypyodbc in you scrpt and:
  * To create an Access mdb file

{{{
import pypyodbc
pypyodbc.win_create_mdb( "D:\\Your_MDB_file_path.mdb" )
}}}

  * As an Python ODBC DBI 2.0 module, you can continue to use pypyodbc to connect to the created mdb files and manipulate them with ODBC interface. 

Below is a demo snippet:

{{{

conn = pypyodbc.win_connect_mdb("D:\\Your_MDB_file_path.mdb")  # new in version 1.0.11


# Below is common ODBC connection string style to connect to mdb file
#conn = pypyodbc.connect('Driver={Microsoft Access Driver (*.mdb)};DBQ='+mdb_path, unicode_results = True)  


cur = conn.cursor()
cur.execute(u"""create table pypyodbc_test_tabl (ID integer PRIMARY KEY,product_name text)""")

...
cur.close()
conn.commit()
conn.close()
   

}}}
*You can refer to [https://code.google.com/p/pypyodbc/wiki/A_HelloWorld_sample_to_access_mssql_with_python Connect to SQLserver sample] to know more about DBI programming with pypyodbc.*

  * Finally, To compact an existing Access mdb file

{{{
pypyodbc.win_compact_mdb("D:\\The path to the original to be compacted mdb file"
                       ,"D:\\The path to put the compacted new mdb file")
}}}

==See also==
===[https://code.google.com/p/pypyodbc/wiki/A_HelloWorld_sample_to_access_mssql_with_python PyPyODBC: Hello SQLServer]===